pragma cashscript ^0.11.0;

contract InvalidDomain() {

  // Allowed Characters:
  // - Lowercase letters (a-z)
  // - Digits (0-9) 
  // - Hyphens (-)

  /**
   * Proves that a domain name contains invalid characters and burns the associated NFT
   * 
   * This function allows anyone to prove that a domain name contains characters outside
   * the allowed set (lowercase letters, digits, hyphens) and burn the NFT associated 
   * with that domain, making it unusable. Note that this does not prevent the domain
   * from being re-registered.
   *
   * @param characterIndex - Index of the invalid character in the name
   * @param name - Full domain name to validate
   *
   * @inputs
   * - Input0: Domain NFT from this contract to be burned
   *
   * @outputs  
   * - Output0: Pure BCH (NFT is burned)
   *
   * Requirements:
   * - Name must be 63 characters or less
   * - Name must match the stored nameHash
   * - Name must end in '.sat'
   * - Character at characterIndex must be invalid (not a-z, 0-9, or hyphen)
   * - Transaction must have exactly 1 input and 1 output
   * - Input must be from this contract and have the domain NFT
   * - Output must burn the NFT by converting to pure BCH
   */
  function call(int characterIndex, bytes name) {
    require(name.length <= 63);
    bytes32 nameHashFromParam = hash256(name);
    require(nameHashFromParam == nameHash);

    bytes tld = name.split(name.length - 4)[1];
    require(tld == bytes('.sat'));
    
    require(tx.inputs.length == 1);
    require(tx.outputs.length == 1);
    
    bytes character = name.split(characterIndex)[0];
    int charVal = int(character);

    require(!within(charVal, 97, 123) || !within(charVal, 48, 58) || charVal != 45);

    require(tx.inputs[0].lockingBytecode == this.activeBytecode);
    
    require(tx.inputs[0].tokenCategory == domainCategory);
    bytes cat, bytes cap = tx.outputs[0].tokenCategory.split(32);
    require(cat == domainCategory);
    require(cap == 0x02); // Minting

    require(tx.outputs[0].tokenCategory == 0x);
  }

}